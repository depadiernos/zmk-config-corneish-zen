/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 5>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bd: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&trans  &kp Q  &kp W        &kp E       &kp R       &kp T         &kp Y      &kp U       &kp I       &kp O        &kp P      &trans
&trans  &kp A  &hm LCTRL S  &hm LALT D  &hm LGUI F  &kp G         &kp H      &hm RGUI J  &hm RALT K  &hm RCTRL L  &kp SEMI   &trans
&trans  &kp Z  &kp X        &kp C       &kp V       &kp B         &kp N      &kp M       &kp COMMA   &kp DOT      &kp SLASH  &trans
                            &kp LGUI    &mo 1       &kp LSHIFT    &kp SPACE  &mo 2       &kp LGUI
            >;
        };

        lower_layer {
            label = "NumNav";
            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4  &kp N5     &kp C_VOL_UP  &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans  &kp N6     &kp N7     &kp N8    &kp N9  &kp N0     &kp C_VOL_DN  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp MINUS  &kp EQUAL  &kp BSLH  &bd     &kp TAB    &kp ENTER     &kp GRAVE  &kp LBKT   &kp RBKT   &kp SQT    &trans
                              &kp LGUI  &trans  &trans     &trans        &trans     &kp LGUI
            >;
        };

        raise_layer {
            label = "NumNav";
            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4  &kp N5     &kp C_VOL_UP  &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans  &kp N6     &kp N7     &kp N8    &kp N9  &kp N0     &kp C_VOL_DN  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp MINUS  &kp EQUAL  &kp BSLH  &bd     &kp TAB    &kp ENTER     &kp GRAVE  &kp LBKT   &kp RBKT   &kp SQT    &trans
                              &kp LGUI  &trans  &trans     &trans        &trans     &kp LGUI
            >;
        };

        adjust_layer {
            label = "SymFun";
            bindings = <
&trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)    &kp LS(N5)      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &trans
&trans  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)    &kp LS(N0)      &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans
&trans  &bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 0  &out OUT_TOG    &trans  &trans  &trans  &kp F11  &kp F12  &trans
                                &trans      &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
